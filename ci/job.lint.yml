parameters:
  jlpm: jlpm --ignore-optional --prefer-offline --frozen-lockfile
  env_update: conda env update -n jupyterlab-starters --file ci/env-lint.yml --quiet
  docs_env_update: conda env update -n jupyterlab-starters --file docs/environment.yml --quiet
  act: source activate jupyterlab-starters &&

jobs:
  - job: Lint
    pool:
      vmImage: ubuntu-16.04
    steps:
      - template: steps.conda.yml
        parameters:
          name: Linux

      - script: ${{ parameters.env_update }} || ${{ parameters.env_update }} || ${{ parameters.env_update }}
        displayName: update conda environment with linting dependencies

      - script: ${{ parameters.act }} python scripts/integrity.py
        displayName: check repo integrity

      - script: ${{ parameters.act }} python scripts/lint.py
        displayName: lint backend

      - script: git diff || echo "no changes"
        displayName: show changes

      - script: ${{ parameters.act }} ${{ parameters.jlpm }} || ${{ parameters.jlpm }} || ${{ parameters.jlpm }}
        displayName: install npm dependencies

      - script: ${{ parameters.act }} jlpm build
        displayName: build so linting can complete

      - script: ${{ parameters.act }} jlpm lint:check
        displayName: lint frontend

      - script: ${{ parameters.docs_env_update }} || ${{ parameters.docs_env_update }} || ${{ parameters.docs_env_update }}
        displayName: update conda environment with docs dependencies

      - script: ${{ parameters.act }} python setup.py sdist bdist_wheel
        displayName: build python distributions

      - script: ${{ parameters.act }} jlpm lerna run bundle
        displayName: build npm bundles

      - script: cp packages/*.tgz dist && cd dist && sha256sum * > SHA256SUMS
        displayName: copy to dist

      - task: PublishPipelineArtifact@0
        displayName: publish artifacts for distribution
        inputs:
          targetPath: dist
          artifactName: Dist $(Build.BuildId)
        condition: always()

      - script: ${{ parameters.act }} python -m pip install -e .
        displayName: setup python for examples

      - script: ${{ parameters.act }} python scripts/docs.py
        displayName: build docs
