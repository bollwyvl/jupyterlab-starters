parameters:
  platforms:
    - name: Linux
      vmImage: ubuntu-16.04
      activate: source activate
    - name: MacOSX
      vmImage: macos-10.14
      activate: source activate
    - name: Windows
      vmImage: vs2017-win2016
      activate: call activate
  pythons:
    - name: ThreeSix
      spec: '>=3.6,<3.7.0a0'
      lab: '>=3,<4'
    - name: ThreeSeven
      spec: '>=3.7,<3.8.0a0'
      lab: '>=3,<4'
    - name: ThreeEight
      spec: '>=3.8,<3.9.0a0'
      lab: '>=3,<4'
  env_update: conda env update -n jupyterlab-starters --file env-test.yml --quiet

jobs:
  - ${{ each platform in parameters.platforms }}:
      - ${{ each python in parameters.pythons}}:
          - job: ${{ platform.name }}${{ python.name }}
            dependsOn:
              - Lint
            pool:
              vmImage: ${{ platform.vmImage }}
            steps:
              - task: DownloadPipelineArtifact@0
                condition: always()
                inputs:
                  artifactName: Dist $(Build.BuildId)
                  targetPath: dist
                displayName: restore dist

              - template: steps.conda.yml
                parameters:
                  name: ${{ platform.name }}

              - script: ${{ platform.activate }} && cd ci && python env_template.py "${{ python.spec }}" "${{ python.lab }}"
                displayName: update environment with python and lab version

              - script: ${{ parameters.env_update }} || ${{ parameters.env_update }} || ${{ parameters.env_update }}
                displayName: update conda environment with test dependencies

              - script: conda info && conda list -n jupyterlab-starters
                displayName: list conda packages and info

              - script: ${{ platform.activate }} jupyterlab-starters && python -m pip install --find-links=dist --no-index --ignore-installed --no-deps jupyter_starters
                displayName: install python wheel

              - script: ${{ platform.activate }} jupyterlab-starters && jupyter serverextension list
                displayName: list server extensions

              - script: ${{ platform.activate }} jupyterlab-starters && jupyter labextension list
                displayName: list labextensions

              - script: ${{ platform.activate }} jupyterlab-starters && python scripts/preflight.py
                displayName: preflight lab

              - script: ${{ platform.activate }} jupyterlab-starters && python scripts/utest.py
                displayName: run unit tests

              - script: ${{ platform.activate }} jupyterlab-starters && python scripts/atest.py
                displayName: run browser tests

              - task: PublishTestResults@2
                displayName: publish browser test results
                inputs:
                  testResultsFiles: atest/output/*.xunit.xml
                  testRunTitle: 'Robot ${{ platform.name }}${{ python.name }}'
                  mergeTestResults: true
                condition: always()

              - task: PublishPipelineArtifact@0
                displayName: publish browser test output
                inputs:
                  targetPath: atest/output
                  artifactName: Robot ${{ platform.name }}${{ python.name }} $(Build.BuildId)
                condition: always()
