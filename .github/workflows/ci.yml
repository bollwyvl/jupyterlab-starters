name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHONIOENCODING: utf-8
  PYTHONUNBUFFERED: '1'
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  # our stuff
  SKIP_JLPM_IF_CACHED: 1
  CACHE_EPOCH: 1
  ATEST_RETRIES: 3

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-docs-${{ hashFiles('.github/locks/docs-linux-64-3.9.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-docs-

      - name: cache (node_modules)
        uses: actions/cache@v2
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc') }}

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@master
        with:
          environment-file: .github/locks/docs-linux-64-3.9.conda.lock
          miniforge-variant: Mambaforge
          use-mamba: true
          use-only-tar-bz2: true

      - name: build
        shell: bash -l {0}
        run: doit -n8 integrity lint dist || doit list --all --status

      - name: build (again)
        shell: bash -l {0}
        run: doit integrity lint dist

      - name: publish (dists)
        uses: actions/upload-artifact@v2
        with:
          name: jupyter-starters dist ${{ github.run_number }}
          path: ./dist

  docs:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      DOCS_IN_CI: 1
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-docs-${{ hashFiles('.github/locks/docs-linux-64-3.9.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-docs-

      - name: cache (node_modules)
        uses: actions/cache@v2
        with:
          path: node_modules
          key: |
            ${{ env.CACHE_EPOCH }}-node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock', '.yarnrc') }}

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@master
        with:
          environment-file: .github/locks/docs-linux-64-3.9.conda.lock
          miniforge-variant: Mambaforge
          use-mamba: true
          use-only-tar-bz2: true

      - name: download (dists)
        uses: actions/download-artifact@v2
        with:
          name: jupyter-starters dist ${{ github.run_number }}
          path: ./dist

      - name: docs/test
        shell: bash -l {0}
        run: doit -n8 test docs || doit list --all --status

      - name: docs/test (again)
        shell: bash -l {0}
        run: doit test docs

      - name: publish (reports)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: jupyter-starters reports linux-64 3.9 ${{ github.run_number }}
          path: |
            build/atest
            build/coverage
            build/utest

      - name: publish (docs)
        uses: actions/upload-artifact@v2
        with:
          name: jupyter-starters docs ${{ github.run_number }}
          path: |
            build/docs/html

  test:
    needs: [build]
    runs-on: ${{ matrix.os }}-latest
    env:
      TEST_IN_CI: 1
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        py: [3.6, 3.9]
        include:
          - os: ubuntu
            subdir: linux-64
          - os: macos
            subdir: osx-64
          - os: windows
            subdir: win-64
        exclude:
          - os: ubuntu
            py: 3.9
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key: ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-test-${{ hashFiles('.github/locks/utest-${{ matrix.subdir }}-${{ matrix.py }}.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-conda-test-

      - name: base env (conda)
        uses: conda-incubator/setup-miniconda@master
        with:
          environment-file: .github/locks/utest-${{ matrix.subdir }}-${{ matrix.py }}.conda.lock
          miniforge-variant: Mambaforge
          use-mamba: true
          use-only-tar-bz2: true

      - name: download (dists)
        uses: actions/download-artifact@v2
        with:
          name: jupyter-starters dist ${{ github.run_number }}
          path: ./dist

      - name: docs/test
        shell: bash -l {0}
        run: doit -n8 test || doit list --all --status

      - name: docs/test (again)
        shell: bash -l {0}
        run: doit test

      - name: publish (reports)
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: jupyter-starters reports ${{ matrix.os }} ${{ matrix.py }} ${{ github.run_number }}
          path: |
            build/atest
            build/coverage
            build/utest
